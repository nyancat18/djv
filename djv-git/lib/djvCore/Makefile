# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.0

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:
.PHONY : .NOTPARALLEL

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Remove some rules from gmake that .SUFFIXES does not remove.
SUFFIXES =

.SUFFIXES: .hpux_make_needs_suffix_list

# Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E remove -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/lince/djv-git

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/lince/djv-git

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake cache editor..."
	/usr/bin/ccmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: install/local
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: install/strip
.PHONY : install/strip/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool..."
	cd /home/lince/djv-git && /usr/bin/cpack --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Run CPack packaging tool for source..."
	cd /home/lince/djv-git && /usr/bin/cpack --config ./CPackSourceConfig.cmake /home/lince/djv-git/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target test
test:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running tests..."
	/usr/bin/ctest --force-new-ctest-process $(ARGS)
.PHONY : test

# Special rule for the target test
test/fast: test
.PHONY : test/fast

# The main all target
all: cmake_check_build_system
	cd /home/lince/djv-git && $(CMAKE_COMMAND) -E cmake_progress_start /home/lince/djv-git/CMakeFiles /home/lince/djv-git/lib/djvCore/CMakeFiles/progress.marks
	cd /home/lince/djv-git && $(MAKE) -f CMakeFiles/Makefile2 lib/djvCore/all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/lince/djv-git/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /home/lince/djv-git && $(MAKE) -f CMakeFiles/Makefile2 lib/djvCore/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /home/lince/djv-git && $(MAKE) -f CMakeFiles/Makefile2 lib/djvCore/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /home/lince/djv-git && $(MAKE) -f CMakeFiles/Makefile2 lib/djvCore/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /home/lince/djv-git && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
lib/djvCore/CMakeFiles/djvCore.dir/rule:
	cd /home/lince/djv-git && $(MAKE) -f CMakeFiles/Makefile2 lib/djvCore/CMakeFiles/djvCore.dir/rule
.PHONY : lib/djvCore/CMakeFiles/djvCore.dir/rule

# Convenience name for target.
djvCore: lib/djvCore/CMakeFiles/djvCore.dir/rule
.PHONY : djvCore

# fast build rule for target.
djvCore/fast:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/build
.PHONY : djvCore/fast

djvAssert.o: djvAssert.cpp.o
.PHONY : djvAssert.o

# target to build an object file
djvAssert.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvAssert.cpp.o
.PHONY : djvAssert.cpp.o

djvAssert.i: djvAssert.cpp.i
.PHONY : djvAssert.i

# target to preprocess a source file
djvAssert.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvAssert.cpp.i
.PHONY : djvAssert.cpp.i

djvAssert.s: djvAssert.cpp.s
.PHONY : djvAssert.s

# target to generate assembly for a file
djvAssert.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvAssert.cpp.s
.PHONY : djvAssert.cpp.s

djvCglContextPrivate.o: djvCglContextPrivate.cpp.o
.PHONY : djvCglContextPrivate.o

# target to build an object file
djvCglContextPrivate.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvCglContextPrivate.cpp.o
.PHONY : djvCglContextPrivate.cpp.o

djvCglContextPrivate.i: djvCglContextPrivate.cpp.i
.PHONY : djvCglContextPrivate.i

# target to preprocess a source file
djvCglContextPrivate.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvCglContextPrivate.cpp.i
.PHONY : djvCglContextPrivate.cpp.i

djvCglContextPrivate.s: djvCglContextPrivate.cpp.s
.PHONY : djvCglContextPrivate.s

# target to generate assembly for a file
djvCglContextPrivate.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvCglContextPrivate.cpp.s
.PHONY : djvCglContextPrivate.cpp.s

djvColor.o: djvColor.cpp.o
.PHONY : djvColor.o

# target to build an object file
djvColor.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvColor.cpp.o
.PHONY : djvColor.cpp.o

djvColor.i: djvColor.cpp.i
.PHONY : djvColor.i

# target to preprocess a source file
djvColor.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvColor.cpp.i
.PHONY : djvColor.cpp.i

djvColor.s: djvColor.cpp.s
.PHONY : djvColor.s

# target to generate assembly for a file
djvColor.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvColor.cpp.s
.PHONY : djvColor.cpp.s

djvColorProfile.o: djvColorProfile.cpp.o
.PHONY : djvColorProfile.o

# target to build an object file
djvColorProfile.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvColorProfile.cpp.o
.PHONY : djvColorProfile.cpp.o

djvColorProfile.i: djvColorProfile.cpp.i
.PHONY : djvColorProfile.i

# target to preprocess a source file
djvColorProfile.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvColorProfile.cpp.i
.PHONY : djvColorProfile.cpp.i

djvColorProfile.s: djvColorProfile.cpp.s
.PHONY : djvColorProfile.s

# target to generate assembly for a file
djvColorProfile.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvColorProfile.cpp.s
.PHONY : djvColorProfile.cpp.s

djvColorUtil.o: djvColorUtil.cpp.o
.PHONY : djvColorUtil.o

# target to build an object file
djvColorUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvColorUtil.cpp.o
.PHONY : djvColorUtil.cpp.o

djvColorUtil.i: djvColorUtil.cpp.i
.PHONY : djvColorUtil.i

# target to preprocess a source file
djvColorUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvColorUtil.cpp.i
.PHONY : djvColorUtil.cpp.i

djvColorUtil.s: djvColorUtil.cpp.s
.PHONY : djvColorUtil.s

# target to generate assembly for a file
djvColorUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvColorUtil.cpp.s
.PHONY : djvColorUtil.cpp.s

djvCoreApplication.o: djvCoreApplication.cpp.o
.PHONY : djvCoreApplication.o

# target to build an object file
djvCoreApplication.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvCoreApplication.cpp.o
.PHONY : djvCoreApplication.cpp.o

djvCoreApplication.i: djvCoreApplication.cpp.i
.PHONY : djvCoreApplication.i

# target to preprocess a source file
djvCoreApplication.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvCoreApplication.cpp.i
.PHONY : djvCoreApplication.cpp.i

djvCoreApplication.s: djvCoreApplication.cpp.s
.PHONY : djvCoreApplication.s

# target to generate assembly for a file
djvCoreApplication.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvCoreApplication.cpp.s
.PHONY : djvCoreApplication.cpp.s

djvDebug.o: djvDebug.cpp.o
.PHONY : djvDebug.o

# target to build an object file
djvDebug.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvDebug.cpp.o
.PHONY : djvDebug.cpp.o

djvDebug.i: djvDebug.cpp.i
.PHONY : djvDebug.i

# target to preprocess a source file
djvDebug.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvDebug.cpp.i
.PHONY : djvDebug.cpp.i

djvDebug.s: djvDebug.cpp.s
.PHONY : djvDebug.s

# target to generate assembly for a file
djvDebug.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvDebug.cpp.s
.PHONY : djvDebug.cpp.s

djvDebugLog.o: djvDebugLog.cpp.o
.PHONY : djvDebugLog.o

# target to build an object file
djvDebugLog.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvDebugLog.cpp.o
.PHONY : djvDebugLog.cpp.o

djvDebugLog.i: djvDebugLog.cpp.i
.PHONY : djvDebugLog.i

# target to preprocess a source file
djvDebugLog.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvDebugLog.cpp.i
.PHONY : djvDebugLog.cpp.i

djvDebugLog.s: djvDebugLog.cpp.s
.PHONY : djvDebugLog.s

# target to generate assembly for a file
djvDebugLog.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvDebugLog.cpp.s
.PHONY : djvDebugLog.cpp.s

djvError.o: djvError.cpp.o
.PHONY : djvError.o

# target to build an object file
djvError.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvError.cpp.o
.PHONY : djvError.cpp.o

djvError.i: djvError.cpp.i
.PHONY : djvError.i

# target to preprocess a source file
djvError.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvError.cpp.i
.PHONY : djvError.cpp.i

djvError.s: djvError.cpp.s
.PHONY : djvError.s

# target to generate assembly for a file
djvError.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvError.cpp.s
.PHONY : djvError.cpp.s

djvErrorUtil.o: djvErrorUtil.cpp.o
.PHONY : djvErrorUtil.o

# target to build an object file
djvErrorUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvErrorUtil.cpp.o
.PHONY : djvErrorUtil.cpp.o

djvErrorUtil.i: djvErrorUtil.cpp.i
.PHONY : djvErrorUtil.i

# target to preprocess a source file
djvErrorUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvErrorUtil.cpp.i
.PHONY : djvErrorUtil.cpp.i

djvErrorUtil.s: djvErrorUtil.cpp.s
.PHONY : djvErrorUtil.s

# target to generate assembly for a file
djvErrorUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvErrorUtil.cpp.s
.PHONY : djvErrorUtil.cpp.s

djvFileInfo.o: djvFileInfo.cpp.o
.PHONY : djvFileInfo.o

# target to build an object file
djvFileInfo.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileInfo.cpp.o
.PHONY : djvFileInfo.cpp.o

djvFileInfo.i: djvFileInfo.cpp.i
.PHONY : djvFileInfo.i

# target to preprocess a source file
djvFileInfo.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileInfo.cpp.i
.PHONY : djvFileInfo.cpp.i

djvFileInfo.s: djvFileInfo.cpp.s
.PHONY : djvFileInfo.s

# target to generate assembly for a file
djvFileInfo.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileInfo.cpp.s
.PHONY : djvFileInfo.cpp.s

djvFileInfoUtil.o: djvFileInfoUtil.cpp.o
.PHONY : djvFileInfoUtil.o

# target to build an object file
djvFileInfoUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileInfoUtil.cpp.o
.PHONY : djvFileInfoUtil.cpp.o

djvFileInfoUtil.i: djvFileInfoUtil.cpp.i
.PHONY : djvFileInfoUtil.i

# target to preprocess a source file
djvFileInfoUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileInfoUtil.cpp.i
.PHONY : djvFileInfoUtil.cpp.i

djvFileInfoUtil.s: djvFileInfoUtil.cpp.s
.PHONY : djvFileInfoUtil.s

# target to generate assembly for a file
djvFileInfoUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileInfoUtil.cpp.s
.PHONY : djvFileInfoUtil.cpp.s

djvFileIo.o: djvFileIo.cpp.o
.PHONY : djvFileIo.o

# target to build an object file
djvFileIo.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileIo.cpp.o
.PHONY : djvFileIo.cpp.o

djvFileIo.i: djvFileIo.cpp.i
.PHONY : djvFileIo.i

# target to preprocess a source file
djvFileIo.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileIo.cpp.i
.PHONY : djvFileIo.cpp.i

djvFileIo.s: djvFileIo.cpp.s
.PHONY : djvFileIo.s

# target to generate assembly for a file
djvFileIo.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileIo.cpp.s
.PHONY : djvFileIo.cpp.s

djvFileIoUtil.o: djvFileIoUtil.cpp.o
.PHONY : djvFileIoUtil.o

# target to build an object file
djvFileIoUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileIoUtil.cpp.o
.PHONY : djvFileIoUtil.cpp.o

djvFileIoUtil.i: djvFileIoUtil.cpp.i
.PHONY : djvFileIoUtil.i

# target to preprocess a source file
djvFileIoUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileIoUtil.cpp.i
.PHONY : djvFileIoUtil.cpp.i

djvFileIoUtil.s: djvFileIoUtil.cpp.s
.PHONY : djvFileIoUtil.s

# target to generate assembly for a file
djvFileIoUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvFileIoUtil.cpp.s
.PHONY : djvFileIoUtil.cpp.s

djvGlxContextPrivate.o: djvGlxContextPrivate.cpp.o
.PHONY : djvGlxContextPrivate.o

# target to build an object file
djvGlxContextPrivate.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvGlxContextPrivate.cpp.o
.PHONY : djvGlxContextPrivate.cpp.o

djvGlxContextPrivate.i: djvGlxContextPrivate.cpp.i
.PHONY : djvGlxContextPrivate.i

# target to preprocess a source file
djvGlxContextPrivate.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvGlxContextPrivate.cpp.i
.PHONY : djvGlxContextPrivate.cpp.i

djvGlxContextPrivate.s: djvGlxContextPrivate.cpp.s
.PHONY : djvGlxContextPrivate.s

# target to generate assembly for a file
djvGlxContextPrivate.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvGlxContextPrivate.cpp.s
.PHONY : djvGlxContextPrivate.cpp.s

djvImage.o: djvImage.cpp.o
.PHONY : djvImage.o

# target to build an object file
djvImage.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImage.cpp.o
.PHONY : djvImage.cpp.o

djvImage.i: djvImage.cpp.i
.PHONY : djvImage.i

# target to preprocess a source file
djvImage.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImage.cpp.i
.PHONY : djvImage.cpp.i

djvImage.s: djvImage.cpp.s
.PHONY : djvImage.s

# target to generate assembly for a file
djvImage.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImage.cpp.s
.PHONY : djvImage.cpp.s

djvImageApplication.o: djvImageApplication.cpp.o
.PHONY : djvImageApplication.o

# target to build an object file
djvImageApplication.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageApplication.cpp.o
.PHONY : djvImageApplication.cpp.o

djvImageApplication.i: djvImageApplication.cpp.i
.PHONY : djvImageApplication.i

# target to preprocess a source file
djvImageApplication.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageApplication.cpp.i
.PHONY : djvImageApplication.cpp.i

djvImageApplication.s: djvImageApplication.cpp.s
.PHONY : djvImageApplication.s

# target to generate assembly for a file
djvImageApplication.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageApplication.cpp.s
.PHONY : djvImageApplication.cpp.s

djvImageIo.o: djvImageIo.cpp.o
.PHONY : djvImageIo.o

# target to build an object file
djvImageIo.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageIo.cpp.o
.PHONY : djvImageIo.cpp.o

djvImageIo.i: djvImageIo.cpp.i
.PHONY : djvImageIo.i

# target to preprocess a source file
djvImageIo.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageIo.cpp.i
.PHONY : djvImageIo.cpp.i

djvImageIo.s: djvImageIo.cpp.s
.PHONY : djvImageIo.s

# target to generate assembly for a file
djvImageIo.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageIo.cpp.s
.PHONY : djvImageIo.cpp.s

djvImageTags.o: djvImageTags.cpp.o
.PHONY : djvImageTags.o

# target to build an object file
djvImageTags.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageTags.cpp.o
.PHONY : djvImageTags.cpp.o

djvImageTags.i: djvImageTags.cpp.i
.PHONY : djvImageTags.i

# target to preprocess a source file
djvImageTags.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageTags.cpp.i
.PHONY : djvImageTags.cpp.i

djvImageTags.s: djvImageTags.cpp.s
.PHONY : djvImageTags.s

# target to generate assembly for a file
djvImageTags.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageTags.cpp.s
.PHONY : djvImageTags.cpp.s

djvImageUtil.o: djvImageUtil.cpp.o
.PHONY : djvImageUtil.o

# target to build an object file
djvImageUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageUtil.cpp.o
.PHONY : djvImageUtil.cpp.o

djvImageUtil.i: djvImageUtil.cpp.i
.PHONY : djvImageUtil.i

# target to preprocess a source file
djvImageUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageUtil.cpp.i
.PHONY : djvImageUtil.cpp.i

djvImageUtil.s: djvImageUtil.cpp.s
.PHONY : djvImageUtil.s

# target to generate assembly for a file
djvImageUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvImageUtil.cpp.s
.PHONY : djvImageUtil.cpp.s

djvMath.o: djvMath.cpp.o
.PHONY : djvMath.o

# target to build an object file
djvMath.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvMath.cpp.o
.PHONY : djvMath.cpp.o

djvMath.i: djvMath.cpp.i
.PHONY : djvMath.i

# target to preprocess a source file
djvMath.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvMath.cpp.i
.PHONY : djvMath.cpp.i

djvMath.s: djvMath.cpp.s
.PHONY : djvMath.s

# target to generate assembly for a file
djvMath.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvMath.cpp.s
.PHONY : djvMath.cpp.s

djvMemory.o: djvMemory.cpp.o
.PHONY : djvMemory.o

# target to build an object file
djvMemory.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvMemory.cpp.o
.PHONY : djvMemory.cpp.o

djvMemory.i: djvMemory.cpp.i
.PHONY : djvMemory.i

# target to preprocess a source file
djvMemory.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvMemory.cpp.i
.PHONY : djvMemory.cpp.i

djvMemory.s: djvMemory.cpp.s
.PHONY : djvMemory.s

# target to generate assembly for a file
djvMemory.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvMemory.cpp.s
.PHONY : djvMemory.cpp.s

djvOpenGl.o: djvOpenGl.cpp.o
.PHONY : djvOpenGl.o

# target to build an object file
djvOpenGl.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGl.cpp.o
.PHONY : djvOpenGl.cpp.o

djvOpenGl.i: djvOpenGl.cpp.i
.PHONY : djvOpenGl.i

# target to preprocess a source file
djvOpenGl.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGl.cpp.i
.PHONY : djvOpenGl.cpp.i

djvOpenGl.s: djvOpenGl.cpp.s
.PHONY : djvOpenGl.s

# target to generate assembly for a file
djvOpenGl.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGl.cpp.s
.PHONY : djvOpenGl.cpp.s

djvOpenGlContext.o: djvOpenGlContext.cpp.o
.PHONY : djvOpenGlContext.o

# target to build an object file
djvOpenGlContext.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlContext.cpp.o
.PHONY : djvOpenGlContext.cpp.o

djvOpenGlContext.i: djvOpenGlContext.cpp.i
.PHONY : djvOpenGlContext.i

# target to preprocess a source file
djvOpenGlContext.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlContext.cpp.i
.PHONY : djvOpenGlContext.cpp.i

djvOpenGlContext.s: djvOpenGlContext.cpp.s
.PHONY : djvOpenGlContext.s

# target to generate assembly for a file
djvOpenGlContext.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlContext.cpp.s
.PHONY : djvOpenGlContext.cpp.s

djvOpenGlImage.o: djvOpenGlImage.cpp.o
.PHONY : djvOpenGlImage.o

# target to build an object file
djvOpenGlImage.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlImage.cpp.o
.PHONY : djvOpenGlImage.cpp.o

djvOpenGlImage.i: djvOpenGlImage.cpp.i
.PHONY : djvOpenGlImage.i

# target to preprocess a source file
djvOpenGlImage.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlImage.cpp.i
.PHONY : djvOpenGlImage.cpp.i

djvOpenGlImage.s: djvOpenGlImage.cpp.s
.PHONY : djvOpenGlImage.s

# target to generate assembly for a file
djvOpenGlImage.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlImage.cpp.s
.PHONY : djvOpenGlImage.cpp.s

djvOpenGlImageDraw.o: djvOpenGlImageDraw.cpp.o
.PHONY : djvOpenGlImageDraw.o

# target to build an object file
djvOpenGlImageDraw.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlImageDraw.cpp.o
.PHONY : djvOpenGlImageDraw.cpp.o

djvOpenGlImageDraw.i: djvOpenGlImageDraw.cpp.i
.PHONY : djvOpenGlImageDraw.i

# target to preprocess a source file
djvOpenGlImageDraw.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlImageDraw.cpp.i
.PHONY : djvOpenGlImageDraw.cpp.i

djvOpenGlImageDraw.s: djvOpenGlImageDraw.cpp.s
.PHONY : djvOpenGlImageDraw.s

# target to generate assembly for a file
djvOpenGlImageDraw.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlImageDraw.cpp.s
.PHONY : djvOpenGlImageDraw.cpp.s

djvOpenGlOffscreenBuffer.o: djvOpenGlOffscreenBuffer.cpp.o
.PHONY : djvOpenGlOffscreenBuffer.o

# target to build an object file
djvOpenGlOffscreenBuffer.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlOffscreenBuffer.cpp.o
.PHONY : djvOpenGlOffscreenBuffer.cpp.o

djvOpenGlOffscreenBuffer.i: djvOpenGlOffscreenBuffer.cpp.i
.PHONY : djvOpenGlOffscreenBuffer.i

# target to preprocess a source file
djvOpenGlOffscreenBuffer.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlOffscreenBuffer.cpp.i
.PHONY : djvOpenGlOffscreenBuffer.cpp.i

djvOpenGlOffscreenBuffer.s: djvOpenGlOffscreenBuffer.cpp.s
.PHONY : djvOpenGlOffscreenBuffer.s

# target to generate assembly for a file
djvOpenGlOffscreenBuffer.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvOpenGlOffscreenBuffer.cpp.s
.PHONY : djvOpenGlOffscreenBuffer.cpp.s

djvPixel.o: djvPixel.cpp.o
.PHONY : djvPixel.o

# target to build an object file
djvPixel.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixel.cpp.o
.PHONY : djvPixel.cpp.o

djvPixel.i: djvPixel.cpp.i
.PHONY : djvPixel.i

# target to preprocess a source file
djvPixel.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixel.cpp.i
.PHONY : djvPixel.cpp.i

djvPixel.s: djvPixel.cpp.s
.PHONY : djvPixel.s

# target to generate assembly for a file
djvPixel.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixel.cpp.s
.PHONY : djvPixel.cpp.s

djvPixelConvert.o: djvPixelConvert.cpp.o
.PHONY : djvPixelConvert.o

# target to build an object file
djvPixelConvert.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixelConvert.cpp.o
.PHONY : djvPixelConvert.cpp.o

djvPixelConvert.i: djvPixelConvert.cpp.i
.PHONY : djvPixelConvert.i

# target to preprocess a source file
djvPixelConvert.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixelConvert.cpp.i
.PHONY : djvPixelConvert.cpp.i

djvPixelConvert.s: djvPixelConvert.cpp.s
.PHONY : djvPixelConvert.s

# target to generate assembly for a file
djvPixelConvert.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixelConvert.cpp.s
.PHONY : djvPixelConvert.cpp.s

djvPixelData.o: djvPixelData.cpp.o
.PHONY : djvPixelData.o

# target to build an object file
djvPixelData.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixelData.cpp.o
.PHONY : djvPixelData.cpp.o

djvPixelData.i: djvPixelData.cpp.i
.PHONY : djvPixelData.i

# target to preprocess a source file
djvPixelData.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixelData.cpp.i
.PHONY : djvPixelData.cpp.i

djvPixelData.s: djvPixelData.cpp.s
.PHONY : djvPixelData.s

# target to generate assembly for a file
djvPixelData.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixelData.cpp.s
.PHONY : djvPixelData.cpp.s

djvPixelDataUtil.o: djvPixelDataUtil.cpp.o
.PHONY : djvPixelDataUtil.o

# target to build an object file
djvPixelDataUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixelDataUtil.cpp.o
.PHONY : djvPixelDataUtil.cpp.o

djvPixelDataUtil.i: djvPixelDataUtil.cpp.i
.PHONY : djvPixelDataUtil.i

# target to preprocess a source file
djvPixelDataUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixelDataUtil.cpp.i
.PHONY : djvPixelDataUtil.cpp.i

djvPixelDataUtil.s: djvPixelDataUtil.cpp.s
.PHONY : djvPixelDataUtil.s

# target to generate assembly for a file
djvPixelDataUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPixelDataUtil.cpp.s
.PHONY : djvPixelDataUtil.cpp.s

djvPlugin.o: djvPlugin.cpp.o
.PHONY : djvPlugin.o

# target to build an object file
djvPlugin.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPlugin.cpp.o
.PHONY : djvPlugin.cpp.o

djvPlugin.i: djvPlugin.cpp.i
.PHONY : djvPlugin.i

# target to preprocess a source file
djvPlugin.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPlugin.cpp.i
.PHONY : djvPlugin.cpp.i

djvPlugin.s: djvPlugin.cpp.s
.PHONY : djvPlugin.s

# target to generate assembly for a file
djvPlugin.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvPlugin.cpp.s
.PHONY : djvPlugin.cpp.s

djvSequence.o: djvSequence.cpp.o
.PHONY : djvSequence.o

# target to build an object file
djvSequence.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSequence.cpp.o
.PHONY : djvSequence.cpp.o

djvSequence.i: djvSequence.cpp.i
.PHONY : djvSequence.i

# target to preprocess a source file
djvSequence.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSequence.cpp.i
.PHONY : djvSequence.cpp.i

djvSequence.s: djvSequence.cpp.s
.PHONY : djvSequence.s

# target to generate assembly for a file
djvSequence.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSequence.cpp.s
.PHONY : djvSequence.cpp.s

djvSequenceUtil.o: djvSequenceUtil.cpp.o
.PHONY : djvSequenceUtil.o

# target to build an object file
djvSequenceUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSequenceUtil.cpp.o
.PHONY : djvSequenceUtil.cpp.o

djvSequenceUtil.i: djvSequenceUtil.cpp.i
.PHONY : djvSequenceUtil.i

# target to preprocess a source file
djvSequenceUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSequenceUtil.cpp.i
.PHONY : djvSequenceUtil.cpp.i

djvSequenceUtil.s: djvSequenceUtil.cpp.s
.PHONY : djvSequenceUtil.s

# target to generate assembly for a file
djvSequenceUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSequenceUtil.cpp.s
.PHONY : djvSequenceUtil.cpp.s

djvSignalBlocker.o: djvSignalBlocker.cpp.o
.PHONY : djvSignalBlocker.o

# target to build an object file
djvSignalBlocker.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSignalBlocker.cpp.o
.PHONY : djvSignalBlocker.cpp.o

djvSignalBlocker.i: djvSignalBlocker.cpp.i
.PHONY : djvSignalBlocker.i

# target to preprocess a source file
djvSignalBlocker.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSignalBlocker.cpp.i
.PHONY : djvSignalBlocker.cpp.i

djvSignalBlocker.s: djvSignalBlocker.cpp.s
.PHONY : djvSignalBlocker.s

# target to generate assembly for a file
djvSignalBlocker.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSignalBlocker.cpp.s
.PHONY : djvSignalBlocker.cpp.s

djvSpeed.o: djvSpeed.cpp.o
.PHONY : djvSpeed.o

# target to build an object file
djvSpeed.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSpeed.cpp.o
.PHONY : djvSpeed.cpp.o

djvSpeed.i: djvSpeed.cpp.i
.PHONY : djvSpeed.i

# target to preprocess a source file
djvSpeed.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSpeed.cpp.i
.PHONY : djvSpeed.cpp.i

djvSpeed.s: djvSpeed.cpp.s
.PHONY : djvSpeed.s

# target to generate assembly for a file
djvSpeed.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSpeed.cpp.s
.PHONY : djvSpeed.cpp.s

djvStringUtil.o: djvStringUtil.cpp.o
.PHONY : djvStringUtil.o

# target to build an object file
djvStringUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvStringUtil.cpp.o
.PHONY : djvStringUtil.cpp.o

djvStringUtil.i: djvStringUtil.cpp.i
.PHONY : djvStringUtil.i

# target to preprocess a source file
djvStringUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvStringUtil.cpp.i
.PHONY : djvStringUtil.cpp.i

djvStringUtil.s: djvStringUtil.cpp.s
.PHONY : djvStringUtil.s

# target to generate assembly for a file
djvStringUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvStringUtil.cpp.s
.PHONY : djvStringUtil.cpp.s

djvSystem.o: djvSystem.cpp.o
.PHONY : djvSystem.o

# target to build an object file
djvSystem.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSystem.cpp.o
.PHONY : djvSystem.cpp.o

djvSystem.i: djvSystem.cpp.i
.PHONY : djvSystem.i

# target to preprocess a source file
djvSystem.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSystem.cpp.i
.PHONY : djvSystem.cpp.i

djvSystem.s: djvSystem.cpp.s
.PHONY : djvSystem.s

# target to generate assembly for a file
djvSystem.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvSystem.cpp.s
.PHONY : djvSystem.cpp.s

djvTime.o: djvTime.cpp.o
.PHONY : djvTime.o

# target to build an object file
djvTime.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvTime.cpp.o
.PHONY : djvTime.cpp.o

djvTime.i: djvTime.cpp.i
.PHONY : djvTime.i

# target to preprocess a source file
djvTime.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvTime.cpp.i
.PHONY : djvTime.cpp.i

djvTime.s: djvTime.cpp.s
.PHONY : djvTime.s

# target to generate assembly for a file
djvTime.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvTime.cpp.s
.PHONY : djvTime.cpp.s

djvTimer.o: djvTimer.cpp.o
.PHONY : djvTimer.o

# target to build an object file
djvTimer.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvTimer.cpp.o
.PHONY : djvTimer.cpp.o

djvTimer.i: djvTimer.cpp.i
.PHONY : djvTimer.i

# target to preprocess a source file
djvTimer.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvTimer.cpp.i
.PHONY : djvTimer.cpp.i

djvTimer.s: djvTimer.cpp.s
.PHONY : djvTimer.s

# target to generate assembly for a file
djvTimer.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvTimer.cpp.s
.PHONY : djvTimer.cpp.s

djvUser.o: djvUser.cpp.o
.PHONY : djvUser.o

# target to build an object file
djvUser.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvUser.cpp.o
.PHONY : djvUser.cpp.o

djvUser.i: djvUser.cpp.i
.PHONY : djvUser.i

# target to preprocess a source file
djvUser.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvUser.cpp.i
.PHONY : djvUser.cpp.i

djvUser.s: djvUser.cpp.s
.PHONY : djvUser.s

# target to generate assembly for a file
djvUser.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvUser.cpp.s
.PHONY : djvUser.cpp.s

djvVectorUtil.o: djvVectorUtil.cpp.o
.PHONY : djvVectorUtil.o

# target to build an object file
djvVectorUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvVectorUtil.cpp.o
.PHONY : djvVectorUtil.cpp.o

djvVectorUtil.i: djvVectorUtil.cpp.i
.PHONY : djvVectorUtil.i

# target to preprocess a source file
djvVectorUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvVectorUtil.cpp.i
.PHONY : djvVectorUtil.cpp.i

djvVectorUtil.s: djvVectorUtil.cpp.s
.PHONY : djvVectorUtil.s

# target to generate assembly for a file
djvVectorUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvVectorUtil.cpp.s
.PHONY : djvVectorUtil.cpp.s

djvWglContextPrivate.o: djvWglContextPrivate.cpp.o
.PHONY : djvWglContextPrivate.o

# target to build an object file
djvWglContextPrivate.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvWglContextPrivate.cpp.o
.PHONY : djvWglContextPrivate.cpp.o

djvWglContextPrivate.i: djvWglContextPrivate.cpp.i
.PHONY : djvWglContextPrivate.i

# target to preprocess a source file
djvWglContextPrivate.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvWglContextPrivate.cpp.i
.PHONY : djvWglContextPrivate.cpp.i

djvWglContextPrivate.s: djvWglContextPrivate.cpp.s
.PHONY : djvWglContextPrivate.s

# target to generate assembly for a file
djvWglContextPrivate.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/djvWglContextPrivate.cpp.s
.PHONY : djvWglContextPrivate.cpp.s

moc_djvColorProfile.o: moc_djvColorProfile.cpp.o
.PHONY : moc_djvColorProfile.o

# target to build an object file
moc_djvColorProfile.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvColorProfile.cpp.o
.PHONY : moc_djvColorProfile.cpp.o

moc_djvColorProfile.i: moc_djvColorProfile.cpp.i
.PHONY : moc_djvColorProfile.i

# target to preprocess a source file
moc_djvColorProfile.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvColorProfile.cpp.i
.PHONY : moc_djvColorProfile.cpp.i

moc_djvColorProfile.s: moc_djvColorProfile.cpp.s
.PHONY : moc_djvColorProfile.s

# target to generate assembly for a file
moc_djvColorProfile.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvColorProfile.cpp.s
.PHONY : moc_djvColorProfile.cpp.s

moc_djvCoreApplication.o: moc_djvCoreApplication.cpp.o
.PHONY : moc_djvCoreApplication.o

# target to build an object file
moc_djvCoreApplication.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvCoreApplication.cpp.o
.PHONY : moc_djvCoreApplication.cpp.o

moc_djvCoreApplication.i: moc_djvCoreApplication.cpp.i
.PHONY : moc_djvCoreApplication.i

# target to preprocess a source file
moc_djvCoreApplication.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvCoreApplication.cpp.i
.PHONY : moc_djvCoreApplication.cpp.i

moc_djvCoreApplication.s: moc_djvCoreApplication.cpp.s
.PHONY : moc_djvCoreApplication.s

# target to generate assembly for a file
moc_djvCoreApplication.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvCoreApplication.cpp.s
.PHONY : moc_djvCoreApplication.cpp.s

moc_djvDebugLog.o: moc_djvDebugLog.cpp.o
.PHONY : moc_djvDebugLog.o

# target to build an object file
moc_djvDebugLog.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvDebugLog.cpp.o
.PHONY : moc_djvDebugLog.cpp.o

moc_djvDebugLog.i: moc_djvDebugLog.cpp.i
.PHONY : moc_djvDebugLog.i

# target to preprocess a source file
moc_djvDebugLog.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvDebugLog.cpp.i
.PHONY : moc_djvDebugLog.cpp.i

moc_djvDebugLog.s: moc_djvDebugLog.cpp.s
.PHONY : moc_djvDebugLog.s

# target to generate assembly for a file
moc_djvDebugLog.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvDebugLog.cpp.s
.PHONY : moc_djvDebugLog.cpp.s

moc_djvFileInfo.o: moc_djvFileInfo.cpp.o
.PHONY : moc_djvFileInfo.o

# target to build an object file
moc_djvFileInfo.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvFileInfo.cpp.o
.PHONY : moc_djvFileInfo.cpp.o

moc_djvFileInfo.i: moc_djvFileInfo.cpp.i
.PHONY : moc_djvFileInfo.i

# target to preprocess a source file
moc_djvFileInfo.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvFileInfo.cpp.i
.PHONY : moc_djvFileInfo.cpp.i

moc_djvFileInfo.s: moc_djvFileInfo.cpp.s
.PHONY : moc_djvFileInfo.s

# target to generate assembly for a file
moc_djvFileInfo.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvFileInfo.cpp.s
.PHONY : moc_djvFileInfo.cpp.s

moc_djvFileInfoUtil.o: moc_djvFileInfoUtil.cpp.o
.PHONY : moc_djvFileInfoUtil.o

# target to build an object file
moc_djvFileInfoUtil.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvFileInfoUtil.cpp.o
.PHONY : moc_djvFileInfoUtil.cpp.o

moc_djvFileInfoUtil.i: moc_djvFileInfoUtil.cpp.i
.PHONY : moc_djvFileInfoUtil.i

# target to preprocess a source file
moc_djvFileInfoUtil.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvFileInfoUtil.cpp.i
.PHONY : moc_djvFileInfoUtil.cpp.i

moc_djvFileInfoUtil.s: moc_djvFileInfoUtil.cpp.s
.PHONY : moc_djvFileInfoUtil.s

# target to generate assembly for a file
moc_djvFileInfoUtil.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvFileInfoUtil.cpp.s
.PHONY : moc_djvFileInfoUtil.cpp.s

moc_djvFileIo.o: moc_djvFileIo.cpp.o
.PHONY : moc_djvFileIo.o

# target to build an object file
moc_djvFileIo.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvFileIo.cpp.o
.PHONY : moc_djvFileIo.cpp.o

moc_djvFileIo.i: moc_djvFileIo.cpp.i
.PHONY : moc_djvFileIo.i

# target to preprocess a source file
moc_djvFileIo.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvFileIo.cpp.i
.PHONY : moc_djvFileIo.cpp.i

moc_djvFileIo.s: moc_djvFileIo.cpp.s
.PHONY : moc_djvFileIo.s

# target to generate assembly for a file
moc_djvFileIo.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvFileIo.cpp.s
.PHONY : moc_djvFileIo.cpp.s

moc_djvImageApplication.o: moc_djvImageApplication.cpp.o
.PHONY : moc_djvImageApplication.o

# target to build an object file
moc_djvImageApplication.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvImageApplication.cpp.o
.PHONY : moc_djvImageApplication.cpp.o

moc_djvImageApplication.i: moc_djvImageApplication.cpp.i
.PHONY : moc_djvImageApplication.i

# target to preprocess a source file
moc_djvImageApplication.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvImageApplication.cpp.i
.PHONY : moc_djvImageApplication.cpp.i

moc_djvImageApplication.s: moc_djvImageApplication.cpp.s
.PHONY : moc_djvImageApplication.s

# target to generate assembly for a file
moc_djvImageApplication.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvImageApplication.cpp.s
.PHONY : moc_djvImageApplication.cpp.s

moc_djvImageIo.o: moc_djvImageIo.cpp.o
.PHONY : moc_djvImageIo.o

# target to build an object file
moc_djvImageIo.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvImageIo.cpp.o
.PHONY : moc_djvImageIo.cpp.o

moc_djvImageIo.i: moc_djvImageIo.cpp.i
.PHONY : moc_djvImageIo.i

# target to preprocess a source file
moc_djvImageIo.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvImageIo.cpp.i
.PHONY : moc_djvImageIo.cpp.i

moc_djvImageIo.s: moc_djvImageIo.cpp.s
.PHONY : moc_djvImageIo.s

# target to generate assembly for a file
moc_djvImageIo.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvImageIo.cpp.s
.PHONY : moc_djvImageIo.cpp.s

moc_djvImageTags.o: moc_djvImageTags.cpp.o
.PHONY : moc_djvImageTags.o

# target to build an object file
moc_djvImageTags.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvImageTags.cpp.o
.PHONY : moc_djvImageTags.cpp.o

moc_djvImageTags.i: moc_djvImageTags.cpp.i
.PHONY : moc_djvImageTags.i

# target to preprocess a source file
moc_djvImageTags.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvImageTags.cpp.i
.PHONY : moc_djvImageTags.cpp.i

moc_djvImageTags.s: moc_djvImageTags.cpp.s
.PHONY : moc_djvImageTags.s

# target to generate assembly for a file
moc_djvImageTags.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvImageTags.cpp.s
.PHONY : moc_djvImageTags.cpp.s

moc_djvMemory.o: moc_djvMemory.cpp.o
.PHONY : moc_djvMemory.o

# target to build an object file
moc_djvMemory.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvMemory.cpp.o
.PHONY : moc_djvMemory.cpp.o

moc_djvMemory.i: moc_djvMemory.cpp.i
.PHONY : moc_djvMemory.i

# target to preprocess a source file
moc_djvMemory.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvMemory.cpp.i
.PHONY : moc_djvMemory.cpp.i

moc_djvMemory.s: moc_djvMemory.cpp.s
.PHONY : moc_djvMemory.s

# target to generate assembly for a file
moc_djvMemory.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvMemory.cpp.s
.PHONY : moc_djvMemory.cpp.s

moc_djvOpenGlImage.o: moc_djvOpenGlImage.cpp.o
.PHONY : moc_djvOpenGlImage.o

# target to build an object file
moc_djvOpenGlImage.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvOpenGlImage.cpp.o
.PHONY : moc_djvOpenGlImage.cpp.o

moc_djvOpenGlImage.i: moc_djvOpenGlImage.cpp.i
.PHONY : moc_djvOpenGlImage.i

# target to preprocess a source file
moc_djvOpenGlImage.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvOpenGlImage.cpp.i
.PHONY : moc_djvOpenGlImage.cpp.i

moc_djvOpenGlImage.s: moc_djvOpenGlImage.cpp.s
.PHONY : moc_djvOpenGlImage.s

# target to generate assembly for a file
moc_djvOpenGlImage.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvOpenGlImage.cpp.s
.PHONY : moc_djvOpenGlImage.cpp.s

moc_djvPixel.o: moc_djvPixel.cpp.o
.PHONY : moc_djvPixel.o

# target to build an object file
moc_djvPixel.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvPixel.cpp.o
.PHONY : moc_djvPixel.cpp.o

moc_djvPixel.i: moc_djvPixel.cpp.i
.PHONY : moc_djvPixel.i

# target to preprocess a source file
moc_djvPixel.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvPixel.cpp.i
.PHONY : moc_djvPixel.cpp.i

moc_djvPixel.s: moc_djvPixel.cpp.s
.PHONY : moc_djvPixel.s

# target to generate assembly for a file
moc_djvPixel.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvPixel.cpp.s
.PHONY : moc_djvPixel.cpp.s

moc_djvPixelData.o: moc_djvPixelData.cpp.o
.PHONY : moc_djvPixelData.o

# target to build an object file
moc_djvPixelData.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvPixelData.cpp.o
.PHONY : moc_djvPixelData.cpp.o

moc_djvPixelData.i: moc_djvPixelData.cpp.i
.PHONY : moc_djvPixelData.i

# target to preprocess a source file
moc_djvPixelData.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvPixelData.cpp.i
.PHONY : moc_djvPixelData.cpp.i

moc_djvPixelData.s: moc_djvPixelData.cpp.s
.PHONY : moc_djvPixelData.s

# target to generate assembly for a file
moc_djvPixelData.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvPixelData.cpp.s
.PHONY : moc_djvPixelData.cpp.s

moc_djvPlugin.o: moc_djvPlugin.cpp.o
.PHONY : moc_djvPlugin.o

# target to build an object file
moc_djvPlugin.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvPlugin.cpp.o
.PHONY : moc_djvPlugin.cpp.o

moc_djvPlugin.i: moc_djvPlugin.cpp.i
.PHONY : moc_djvPlugin.i

# target to preprocess a source file
moc_djvPlugin.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvPlugin.cpp.i
.PHONY : moc_djvPlugin.cpp.i

moc_djvPlugin.s: moc_djvPlugin.cpp.s
.PHONY : moc_djvPlugin.s

# target to generate assembly for a file
moc_djvPlugin.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvPlugin.cpp.s
.PHONY : moc_djvPlugin.cpp.s

moc_djvSequence.o: moc_djvSequence.cpp.o
.PHONY : moc_djvSequence.o

# target to build an object file
moc_djvSequence.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvSequence.cpp.o
.PHONY : moc_djvSequence.cpp.o

moc_djvSequence.i: moc_djvSequence.cpp.i
.PHONY : moc_djvSequence.i

# target to preprocess a source file
moc_djvSequence.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvSequence.cpp.i
.PHONY : moc_djvSequence.cpp.i

moc_djvSequence.s: moc_djvSequence.cpp.s
.PHONY : moc_djvSequence.s

# target to generate assembly for a file
moc_djvSequence.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvSequence.cpp.s
.PHONY : moc_djvSequence.cpp.s

moc_djvSpeed.o: moc_djvSpeed.cpp.o
.PHONY : moc_djvSpeed.o

# target to build an object file
moc_djvSpeed.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvSpeed.cpp.o
.PHONY : moc_djvSpeed.cpp.o

moc_djvSpeed.i: moc_djvSpeed.cpp.i
.PHONY : moc_djvSpeed.i

# target to preprocess a source file
moc_djvSpeed.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvSpeed.cpp.i
.PHONY : moc_djvSpeed.cpp.i

moc_djvSpeed.s: moc_djvSpeed.cpp.s
.PHONY : moc_djvSpeed.s

# target to generate assembly for a file
moc_djvSpeed.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvSpeed.cpp.s
.PHONY : moc_djvSpeed.cpp.s

moc_djvTime.o: moc_djvTime.cpp.o
.PHONY : moc_djvTime.o

# target to build an object file
moc_djvTime.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvTime.cpp.o
.PHONY : moc_djvTime.cpp.o

moc_djvTime.i: moc_djvTime.cpp.i
.PHONY : moc_djvTime.i

# target to preprocess a source file
moc_djvTime.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvTime.cpp.i
.PHONY : moc_djvTime.cpp.i

moc_djvTime.s: moc_djvTime.cpp.s
.PHONY : moc_djvTime.s

# target to generate assembly for a file
moc_djvTime.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/moc_djvTime.cpp.s
.PHONY : moc_djvTime.cpp.s

qrc_djvCore.o: qrc_djvCore.cpp.o
.PHONY : qrc_djvCore.o

# target to build an object file
qrc_djvCore.cpp.o:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/qrc_djvCore.cpp.o
.PHONY : qrc_djvCore.cpp.o

qrc_djvCore.i: qrc_djvCore.cpp.i
.PHONY : qrc_djvCore.i

# target to preprocess a source file
qrc_djvCore.cpp.i:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/qrc_djvCore.cpp.i
.PHONY : qrc_djvCore.cpp.i

qrc_djvCore.s: qrc_djvCore.cpp.s
.PHONY : qrc_djvCore.s

# target to generate assembly for a file
qrc_djvCore.cpp.s:
	cd /home/lince/djv-git && $(MAKE) -f lib/djvCore/CMakeFiles/djvCore.dir/build.make lib/djvCore/CMakeFiles/djvCore.dir/qrc_djvCore.cpp.s
.PHONY : qrc_djvCore.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... djvCore"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... test"
	@echo "... djvAssert.o"
	@echo "... djvAssert.i"
	@echo "... djvAssert.s"
	@echo "... djvCglContextPrivate.o"
	@echo "... djvCglContextPrivate.i"
	@echo "... djvCglContextPrivate.s"
	@echo "... djvColor.o"
	@echo "... djvColor.i"
	@echo "... djvColor.s"
	@echo "... djvColorProfile.o"
	@echo "... djvColorProfile.i"
	@echo "... djvColorProfile.s"
	@echo "... djvColorUtil.o"
	@echo "... djvColorUtil.i"
	@echo "... djvColorUtil.s"
	@echo "... djvCoreApplication.o"
	@echo "... djvCoreApplication.i"
	@echo "... djvCoreApplication.s"
	@echo "... djvDebug.o"
	@echo "... djvDebug.i"
	@echo "... djvDebug.s"
	@echo "... djvDebugLog.o"
	@echo "... djvDebugLog.i"
	@echo "... djvDebugLog.s"
	@echo "... djvError.o"
	@echo "... djvError.i"
	@echo "... djvError.s"
	@echo "... djvErrorUtil.o"
	@echo "... djvErrorUtil.i"
	@echo "... djvErrorUtil.s"
	@echo "... djvFileInfo.o"
	@echo "... djvFileInfo.i"
	@echo "... djvFileInfo.s"
	@echo "... djvFileInfoUtil.o"
	@echo "... djvFileInfoUtil.i"
	@echo "... djvFileInfoUtil.s"
	@echo "... djvFileIo.o"
	@echo "... djvFileIo.i"
	@echo "... djvFileIo.s"
	@echo "... djvFileIoUtil.o"
	@echo "... djvFileIoUtil.i"
	@echo "... djvFileIoUtil.s"
	@echo "... djvGlxContextPrivate.o"
	@echo "... djvGlxContextPrivate.i"
	@echo "... djvGlxContextPrivate.s"
	@echo "... djvImage.o"
	@echo "... djvImage.i"
	@echo "... djvImage.s"
	@echo "... djvImageApplication.o"
	@echo "... djvImageApplication.i"
	@echo "... djvImageApplication.s"
	@echo "... djvImageIo.o"
	@echo "... djvImageIo.i"
	@echo "... djvImageIo.s"
	@echo "... djvImageTags.o"
	@echo "... djvImageTags.i"
	@echo "... djvImageTags.s"
	@echo "... djvImageUtil.o"
	@echo "... djvImageUtil.i"
	@echo "... djvImageUtil.s"
	@echo "... djvMath.o"
	@echo "... djvMath.i"
	@echo "... djvMath.s"
	@echo "... djvMemory.o"
	@echo "... djvMemory.i"
	@echo "... djvMemory.s"
	@echo "... djvOpenGl.o"
	@echo "... djvOpenGl.i"
	@echo "... djvOpenGl.s"
	@echo "... djvOpenGlContext.o"
	@echo "... djvOpenGlContext.i"
	@echo "... djvOpenGlContext.s"
	@echo "... djvOpenGlImage.o"
	@echo "... djvOpenGlImage.i"
	@echo "... djvOpenGlImage.s"
	@echo "... djvOpenGlImageDraw.o"
	@echo "... djvOpenGlImageDraw.i"
	@echo "... djvOpenGlImageDraw.s"
	@echo "... djvOpenGlOffscreenBuffer.o"
	@echo "... djvOpenGlOffscreenBuffer.i"
	@echo "... djvOpenGlOffscreenBuffer.s"
	@echo "... djvPixel.o"
	@echo "... djvPixel.i"
	@echo "... djvPixel.s"
	@echo "... djvPixelConvert.o"
	@echo "... djvPixelConvert.i"
	@echo "... djvPixelConvert.s"
	@echo "... djvPixelData.o"
	@echo "... djvPixelData.i"
	@echo "... djvPixelData.s"
	@echo "... djvPixelDataUtil.o"
	@echo "... djvPixelDataUtil.i"
	@echo "... djvPixelDataUtil.s"
	@echo "... djvPlugin.o"
	@echo "... djvPlugin.i"
	@echo "... djvPlugin.s"
	@echo "... djvSequence.o"
	@echo "... djvSequence.i"
	@echo "... djvSequence.s"
	@echo "... djvSequenceUtil.o"
	@echo "... djvSequenceUtil.i"
	@echo "... djvSequenceUtil.s"
	@echo "... djvSignalBlocker.o"
	@echo "... djvSignalBlocker.i"
	@echo "... djvSignalBlocker.s"
	@echo "... djvSpeed.o"
	@echo "... djvSpeed.i"
	@echo "... djvSpeed.s"
	@echo "... djvStringUtil.o"
	@echo "... djvStringUtil.i"
	@echo "... djvStringUtil.s"
	@echo "... djvSystem.o"
	@echo "... djvSystem.i"
	@echo "... djvSystem.s"
	@echo "... djvTime.o"
	@echo "... djvTime.i"
	@echo "... djvTime.s"
	@echo "... djvTimer.o"
	@echo "... djvTimer.i"
	@echo "... djvTimer.s"
	@echo "... djvUser.o"
	@echo "... djvUser.i"
	@echo "... djvUser.s"
	@echo "... djvVectorUtil.o"
	@echo "... djvVectorUtil.i"
	@echo "... djvVectorUtil.s"
	@echo "... djvWglContextPrivate.o"
	@echo "... djvWglContextPrivate.i"
	@echo "... djvWglContextPrivate.s"
	@echo "... moc_djvColorProfile.o"
	@echo "... moc_djvColorProfile.i"
	@echo "... moc_djvColorProfile.s"
	@echo "... moc_djvCoreApplication.o"
	@echo "... moc_djvCoreApplication.i"
	@echo "... moc_djvCoreApplication.s"
	@echo "... moc_djvDebugLog.o"
	@echo "... moc_djvDebugLog.i"
	@echo "... moc_djvDebugLog.s"
	@echo "... moc_djvFileInfo.o"
	@echo "... moc_djvFileInfo.i"
	@echo "... moc_djvFileInfo.s"
	@echo "... moc_djvFileInfoUtil.o"
	@echo "... moc_djvFileInfoUtil.i"
	@echo "... moc_djvFileInfoUtil.s"
	@echo "... moc_djvFileIo.o"
	@echo "... moc_djvFileIo.i"
	@echo "... moc_djvFileIo.s"
	@echo "... moc_djvImageApplication.o"
	@echo "... moc_djvImageApplication.i"
	@echo "... moc_djvImageApplication.s"
	@echo "... moc_djvImageIo.o"
	@echo "... moc_djvImageIo.i"
	@echo "... moc_djvImageIo.s"
	@echo "... moc_djvImageTags.o"
	@echo "... moc_djvImageTags.i"
	@echo "... moc_djvImageTags.s"
	@echo "... moc_djvMemory.o"
	@echo "... moc_djvMemory.i"
	@echo "... moc_djvMemory.s"
	@echo "... moc_djvOpenGlImage.o"
	@echo "... moc_djvOpenGlImage.i"
	@echo "... moc_djvOpenGlImage.s"
	@echo "... moc_djvPixel.o"
	@echo "... moc_djvPixel.i"
	@echo "... moc_djvPixel.s"
	@echo "... moc_djvPixelData.o"
	@echo "... moc_djvPixelData.i"
	@echo "... moc_djvPixelData.s"
	@echo "... moc_djvPlugin.o"
	@echo "... moc_djvPlugin.i"
	@echo "... moc_djvPlugin.s"
	@echo "... moc_djvSequence.o"
	@echo "... moc_djvSequence.i"
	@echo "... moc_djvSequence.s"
	@echo "... moc_djvSpeed.o"
	@echo "... moc_djvSpeed.i"
	@echo "... moc_djvSpeed.s"
	@echo "... moc_djvTime.o"
	@echo "... moc_djvTime.i"
	@echo "... moc_djvTime.s"
	@echo "... qrc_djvCore.o"
	@echo "... qrc_djvCore.i"
	@echo "... qrc_djvCore.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /home/lince/djv-git && $(CMAKE_COMMAND) -H$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

